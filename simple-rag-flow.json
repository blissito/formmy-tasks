{
    "nodes": [
        {
            "id": "conversationalRetrievalQAChain_0",
            "position": { "x": 1200, "y": 200 },
            "type": "customNode",
            "data": {
                "id": "conversationalRetrievalQAChain_0",
                "label": "Conversational Retrieval QA Chain",
                "version": 3,
                "name": "conversationalRetrievalQAChain",
                "type": "ConversationalRetrievalQAChain",
                "baseClasses": ["ConversationalRetrievalQAChain", "BaseChain", "Runnable"],
                "category": "Chains",
                "description": "Document QA - built on RetrievalQAChain to provide a chat history component",
                "inputParams": [
                    {
                        "label": "System Message",
                        "name": "systemMessagePrompt",
                        "type": "string",
                        "rows": 4,
                        "additionalParams": true,
                        "optional": true,
                        "placeholder": "I want you to act as a document that I am having a conversation with. Your name is \"AI Assistant\", and you will answer all questions based on the provided context.",
                        "id": "conversationalRetrievalQAChain_0-input-systemMessagePrompt-string"
                    },
                    {
                        "label": "Chain Option",
                        "name": "chainOption",
                        "type": "options",
                        "options": [
                            { "label": "MapReduceDocumentsChain", "name": "map_reduce" },
                            { "label": "RefineDocumentsChain", "name": "refine" },
                            { "label": "StuffDocumentsChain", "name": "stuff" }
                        ],
                        "default": "stuff",
                        "optional": true,
                        "id": "conversationalRetrievalQAChain_0-input-chainOption-options"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Chat Model",
                        "name": "model",
                        "type": "BaseChatModel",
                        "id": "conversationalRetrievalQAChain_0-input-model-BaseChatModel"
                    },
                    {
                        "label": "Vector Store Retriever",
                        "name": "vectorStoreRetriever",
                        "type": "BaseRetriever",
                        "id": "conversationalRetrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever"
                    },
                    {
                        "label": "Memory",
                        "name": "memory",
                        "type": "BaseMemory",
                        "optional": true,
                        "id": "conversationalRetrievalQAChain_0-input-memory-BaseMemory"
                    }
                ],
                "inputs": {
                    "model": "{{chatOpenAI_0.data.instance}}",
                    "vectorStoreRetriever": "{{memoryVectorStore_0.data.instance}}",
                    "memory": "{{bufferMemory_0.data.instance}}",
                    "systemMessagePrompt": "You are a helpful AI assistant. Answer questions based on the provided context from the documents. If you don't know the answer based on the context, say so clearly.",
                    "chainOption": "stuff"
                },
                "outputAnchors": [
                    {
                        "id": "conversationalRetrievalQAChain_0-output-conversationalRetrievalQAChain-ConversationalRetrievalQAChain|BaseChain|Runnable",
                        "name": "conversationalRetrievalQAChain",
                        "label": "ConversationalRetrievalQAChain",
                        "type": "ConversationalRetrievalQAChain | BaseChain | Runnable"
                    }
                ]
            },
            "width": 300,
            "height": 500
        },
        {
            "id": "chatOpenAI_0",
            "position": { "x": 800, "y": 100 },
            "type": "customNode",
            "data": {
                "id": "chatOpenAI_0",
                "label": "ChatOpenAI",
                "version": 8.3,
                "name": "chatOpenAI",
                "type": "ChatOpenAI",
                "baseClasses": ["ChatOpenAI", "BaseChatOpenAI", "BaseChatModel", "BaseLanguageModel", "Runnable"],
                "category": "Chat Models",
                "description": "Wrapper around OpenAI large language models that use the Chat endpoint",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["openAIApi"],
                        "id": "chatOpenAI_0-input-credential-credential"
                    },
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "asyncOptions",
                        "loadMethod": "listModels",
                        "default": "gpt-4o-mini",
                        "id": "chatOpenAI_0-input-modelName-asyncOptions"
                    },
                    {
                        "label": "Temperature",
                        "name": "temperature",
                        "type": "number",
                        "step": 0.1,
                        "default": 0.7,
                        "optional": true,
                        "id": "chatOpenAI_0-input-temperature-number"
                    }
                ],
                "inputs": {
                    "modelName": "gpt-4o-mini",
                    "temperature": "0.7"
                },
                "outputAnchors": [
                    {
                        "id": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
                        "name": "chatOpenAI",
                        "label": "ChatOpenAI",
                        "type": "ChatOpenAI | BaseChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable"
                    }
                ]
            },
            "width": 300,
            "height": 400
        },
        {
            "id": "memoryVectorStore_0",
            "position": { "x": 800, "y": 600 },
            "type": "customNode",
            "data": {
                "id": "memoryVectorStore_0",
                "label": "In-Memory Vector Store",
                "version": 1,
                "name": "memoryVectorStore",
                "type": "MemoryVectorStore",
                "baseClasses": ["MemoryVectorStore", "VectorStore", "BaseRetriever"],
                "category": "Vector Stores",
                "description": "In-memory vectorstore that stores embeddings and does an exact, linear search for the most similar embeddings.",
                "inputParams": [
                    {
                        "label": "Top K",
                        "name": "topK",
                        "description": "Number of top results to fetch. Default to 4",
                        "placeholder": "4",
                        "type": "number",
                        "additionalParams": true,
                        "optional": true,
                        "id": "memoryVectorStore_0-input-topK-number"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Document",
                        "name": "document",
                        "type": "Document",
                        "list": true,
                        "id": "memoryVectorStore_0-input-document-Document"
                    },
                    {
                        "label": "Embeddings",
                        "name": "embeddings",
                        "type": "Embeddings",
                        "id": "memoryVectorStore_0-input-embeddings-Embeddings"
                    }
                ],
                "inputs": {
                    "document": ["{{recursiveCharacterTextSplitter_0.data.instance}}"],
                    "embeddings": "{{openAIEmbeddings_0.data.instance}}",
                    "topK": "4"
                },
                "outputAnchors": [
                    {
                        "id": "memoryVectorStore_0-output-retriever-MemoryVectorStore|VectorStore|BaseRetriever",
                        "name": "retriever",
                        "label": "Memory Vector Store Retriever",
                        "type": "MemoryVectorStore | VectorStore | BaseRetriever"
                    }
                ]
            },
            "width": 300,
            "height": 400
        },
        {
            "id": "recursiveCharacterTextSplitter_0",
            "position": { "x": 400, "y": 600 },
            "type": "customNode",
            "data": {
                "id": "recursiveCharacterTextSplitter_0",
                "label": "Recursive Character Text Splitter",
                "version": 2,
                "name": "recursiveCharacterTextSplitter",
                "type": "RecursiveCharacterTextSplitter",
                "baseClasses": ["RecursiveCharacterTextSplitter", "TextSplitter", "BaseDocumentTransformer", "Runnable"],
                "category": "Text Splitters",
                "description": "Split documents into chunks",
                "inputParams": [
                    {
                        "label": "Chunk Size",
                        "name": "chunkSize",
                        "type": "number",
                        "default": 1000,
                        "optional": true,
                        "id": "recursiveCharacterTextSplitter_0-input-chunkSize-number"
                    },
                    {
                        "label": "Chunk Overlap",
                        "name": "chunkOverlap",
                        "type": "number",
                        "optional": true,
                        "default": 200,
                        "id": "recursiveCharacterTextSplitter_0-input-chunkOverlap-number"
                    }
                ],
                "inputAnchors": [
                    {
                        "label": "Document",
                        "name": "document",
                        "type": "Document",
                        "list": true,
                        "id": "recursiveCharacterTextSplitter_0-input-document-Document"
                    }
                ],
                "inputs": {
                    "document": ["{{pdfFile_0.data.instance}}"],
                    "chunkSize": "1000",
                    "chunkOverlap": "200"
                },
                "outputAnchors": [
                    {
                        "id": "recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
                        "name": "recursiveCharacterTextSplitter",
                        "label": "RecursiveCharacterTextSplitter",
                        "type": "RecursiveCharacterTextSplitter | TextSplitter | BaseDocumentTransformer | Runnable"
                    }
                ]
            },
            "width": 300,
            "height": 400
        },
        {
            "id": "pdfFile_0",
            "position": { "x": 50, "y": 600 },
            "type": "customNode",
            "data": {
                "id": "pdfFile_0",
                "label": "Pdf File",
                "version": 1,
                "name": "pdfFile",
                "type": "Document",
                "baseClasses": ["Document"],
                "category": "Document Loaders",
                "description": "Load data from PDF files",
                "inputParams": [
                    {
                        "label": "Pdf File",
                        "name": "pdfFile",
                        "type": "file",
                        "fileType": ".pdf",
                        "id": "pdfFile_0-input-pdfFile-file"
                    },
                    {
                        "label": "Usage",
                        "name": "usage",
                        "type": "options",
                        "options": [
                            { "label": "One document per page", "name": "perPage" },
                            { "label": "One document per file", "name": "perFile" }
                        ],
                        "default": "perPage",
                        "id": "pdfFile_0-input-usage-options"
                    },
                    {
                        "label": "Use Legacy Build",
                        "name": "legacyBuild",
                        "type": "boolean",
                        "optional": true,
                        "additionalParams": true,
                        "id": "pdfFile_0-input-legacyBuild-boolean"
                    }
                ],
                "inputs": {
                    "usage": "perPage",
                    "legacyBuild": ""
                },
                "outputAnchors": [
                    {
                        "id": "pdfFile_0-output-pdfFile-Document",
                        "name": "pdfFile",
                        "label": "Document",
                        "type": "Document"
                    }
                ]
            },
            "width": 300,
            "height": 400
        },
        {
            "id": "openAIEmbeddings_0",
            "position": { "x": 400, "y": 200 },
            "type": "customNode",
            "data": {
                "id": "openAIEmbeddings_0",
                "label": "OpenAI Embeddings",
                "version": 4,
                "name": "openAIEmbeddings",
                "type": "OpenAIEmbeddings",
                "baseClasses": ["OpenAIEmbeddings", "Embeddings"],
                "category": "Embeddings",
                "description": "OpenAI API to generate embeddings for a given text",
                "inputParams": [
                    {
                        "label": "Connect Credential",
                        "name": "credential",
                        "type": "credential",
                        "credentialNames": ["openAIApi"],
                        "id": "openAIEmbeddings_0-input-credential-credential"
                    },
                    {
                        "label": "Model Name",
                        "name": "modelName",
                        "type": "asyncOptions",
                        "loadMethod": "listModels",
                        "default": "text-embedding-ada-002",
                        "id": "openAIEmbeddings_0-input-modelName-asyncOptions"
                    },
                    {
                        "label": "Strip New Lines",
                        "name": "stripNewLines",
                        "type": "boolean",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_0-input-stripNewLines-boolean"
                    },
                    {
                        "label": "Batch Size",
                        "name": "batchSize",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_0-input-batchSize-number"
                    },
                    {
                        "label": "Timeout",
                        "name": "timeout",
                        "type": "number",
                        "optional": true,
                        "additionalParams": true,
                        "id": "openAIEmbeddings_0-input-timeout-number"
                    }
                ],
                "inputs": {
                    "modelName": "text-embedding-3-small",
                    "stripNewLines": "",
                    "batchSize": "",
                    "timeout": ""
                },
                "outputAnchors": [
                    {
                        "id": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
                        "name": "openAIEmbeddings",
                        "label": "OpenAIEmbeddings",
                        "type": "OpenAIEmbeddings | Embeddings"
                    }
                ]
            },
            "width": 300,
            "height": 400
        },
        {
            "id": "bufferMemory_0",
            "position": { "x": 1200, "y": 800 },
            "type": "customNode",
            "data": {
                "id": "bufferMemory_0",
                "label": "Buffer Memory",
                "version": 2,
                "name": "bufferMemory",
                "type": "BufferMemory",
                "baseClasses": ["BufferMemory", "BaseChatMemory", "BaseMemory"],
                "category": "Memory",
                "description": "Retrieve chat messages stored in database",
                "inputParams": [
                    {
                        "label": "Session Id",
                        "name": "sessionId",
                        "type": "string",
                        "description": "If not specified, a random id will be used.",
                        "default": "",
                        "additionalParams": true,
                        "optional": true,
                        "id": "bufferMemory_0-input-sessionId-string"
                    },
                    {
                        "label": "Memory Key",
                        "name": "memoryKey",
                        "type": "string",
                        "default": "chat_history",
                        "additionalParams": true,
                        "id": "bufferMemory_0-input-memoryKey-string"
                    }
                ],
                "inputs": {
                    "sessionId": "",
                    "memoryKey": "chat_history"
                },
                "outputAnchors": [
                    {
                        "id": "bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory",
                        "name": "bufferMemory",
                        "label": "BufferMemory",
                        "type": "BufferMemory | BaseChatMemory | BaseMemory"
                    }
                ]
            },
            "width": 300,
            "height": 400
        }
    ],
    "edges": [
        {
            "source": "chatOpenAI_0",
            "sourceHandle": "chatOpenAI_0-output-chatOpenAI-ChatOpenAI|BaseChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
            "target": "conversationalRetrievalQAChain_0",
            "targetHandle": "conversationalRetrievalQAChain_0-input-model-BaseChatModel",
            "type": "buttonedge",
            "id": "chatOpenAI_0-conversationalRetrievalQAChain_0"
        },
        {
            "source": "memoryVectorStore_0",
            "sourceHandle": "memoryVectorStore_0-output-retriever-MemoryVectorStore|VectorStore|BaseRetriever",
            "target": "conversationalRetrievalQAChain_0",
            "targetHandle": "conversationalRetrievalQAChain_0-input-vectorStoreRetriever-BaseRetriever",
            "type": "buttonedge",
            "id": "memoryVectorStore_0-conversationalRetrievalQAChain_0"
        },
        {
            "source": "bufferMemory_0",
            "sourceHandle": "bufferMemory_0-output-bufferMemory-BufferMemory|BaseChatMemory|BaseMemory",
            "target": "conversationalRetrievalQAChain_0",
            "targetHandle": "conversationalRetrievalQAChain_0-input-memory-BaseMemory",
            "type": "buttonedge",
            "id": "bufferMemory_0-conversationalRetrievalQAChain_0"
        },
        {
            "source": "recursiveCharacterTextSplitter_0",
            "sourceHandle": "recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
            "target": "memoryVectorStore_0",
            "targetHandle": "memoryVectorStore_0-input-document-Document",
            "type": "buttonedge",
            "id": "recursiveCharacterTextSplitter_0-memoryVectorStore_0"
        },
        {
            "source": "pdfFile_0",
            "sourceHandle": "pdfFile_0-output-pdfFile-Document",
            "target": "recursiveCharacterTextSplitter_0",
            "targetHandle": "recursiveCharacterTextSplitter_0-input-document-Document",
            "type": "buttonedge",
            "id": "pdfFile_0-recursiveCharacterTextSplitter_0"
        },
        {
            "source": "openAIEmbeddings_0",
            "sourceHandle": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "target": "memoryVectorStore_0",
            "targetHandle": "memoryVectorStore_0-input-embeddings-Embeddings",
            "type": "buttonedge",
            "id": "openAIEmbeddings_0-memoryVectorStore_0"
        }
    ]
}
